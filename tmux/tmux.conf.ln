# Enable pbcopy and pbpaste support
set-option -g default-command "reattach-to-user-namespace -l bash"

# Set default terminal
set  -g default-terminal "screen-256color"

# Vi-style key bindings for copy and choice mode
setw -g mode-keys vi

# Enable mouse copy mode and selection
set  -g mode-mouse on

# Enable mouse select pane/window
set -g mouse-select-pane on
set -g mouse-select-window on

# Start tmux windows at 1 instead of 0
set -g base-index 1

# Re-number windows sequentially after closing any of them
set -g renumber-windows on

# Seamless aviation using vim-tmux-navigator (github christoomey/vim-tmux-navigator)
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

#------------------------ Status line

# Set status line background color
set -g status-bg "#252525"

# Set status line foreground color
set -g status-fg "#aaaaaa"

# Set status line left section to start
set -g status-left "|"

# Set status line right section to session name
set -g status-right "#[fg=yellow]#S "

# Set window title format
set-window-option -g window-status-format '#I - #W |'

# Set current window title format
set-window-option -g window-status-current-format '#[fg=yellow]#I - #W#[default] |'


#------------------------ Key bindings

# Reload tmux.conf
bind-key r source-file ~/.tmux.conf \; display-message "Configuration reloaded"

# Toggle status line
bind-key b set-option status

# Vi-style movements between panes
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# More intuitive pane splitting key-bindings, open all in current path
bind-key - split-window -v  -c '#{pane_current_path}'
bind-key \ split-window -h  -c '#{pane_current_path}'
bind c new-window -c '#{pane_current_path}'

# Easy resizing of panes with fine and coarse adjustment
bind -n C-Left resize-pane -L 2
bind -n C-Right resize-pane -R 2
bind -n C-Down resize-pane -D 1
bind -n C-Up resize-pane -U 1
bind -n S-Left resize-pane -L 10
bind -n S-Right resize-pane -R 10
bind -n S-Down resize-pane -D 5
bind -n S-Up resize-pane -U 5

# Send current pane to new window
bind-key b break-pane -d

# Prompted join-pane
bind-key j command-prompt -p "join from window: "  "join-pane -h -s '%%'"
